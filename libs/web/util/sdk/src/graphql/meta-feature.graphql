fragment MetaEnumDetails on MetaEnum {
  id
  values
}

fragment MetaModelDetails on MetaModel {
  id
  fields {
    ...MetaFieldDetails
  }
}

fragment MetaFieldDetails on MetaField {
  id
  type
  required
  enum
  relation
  list
}

query MetaSchema {
  schema: metaSchema {
    models {
      ...MetaModelDetails
    }
    enums {
      ...MetaEnumDetails
    }
  }
}

query MetaGenerated {
  generated: metaGenerated
}

query MetaModelData($model: String!) {
  generated: metaModelData(model: $model) {
    count
    data
    model {
      ...MetaModelDetails
    }
    schema {
      models {
        ...MetaModelDetails
      }
      enums {
        ...MetaEnumDetails
      }
    }
  }
}

mutation MetaCreateModelData($model: String!, $data: JSON!) {
  metaCreateModelData(model: $model, data: $data)
}
mutation MetaDeleteModelRecord($model: String!, $recordId: String!) {
  metaDeleteModelRecord(model: $model, recordId: $recordId)
}
